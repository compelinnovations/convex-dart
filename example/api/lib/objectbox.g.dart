// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'src/models/objectbox/box/auth_user_box.dart';
import 'src/models/objectbox/box/cash_count_field_sign_up_box.dart';
import 'src/models/objectbox/box/field_agent_box.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
    id: const obx_int.IdUid(18, 729509887491916128),
    name: 'AuthUserBox',
    lastPropertyId: const obx_int.IdUid(44, 8173091906690746093),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 6045467231255289132),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 7339700492530225708),
        name: 'idRef',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 5812214589457750847),
        name: 'appCountryId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 8328051765039888554),
        name: 'appCountryIso',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 8929938187690263245),
        name: 'appCountryName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 3748366723653926398),
        name: 'banExpires',
        type: 12,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 2046075961036689988),
        name: 'banReason',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 6679336345410566071),
        name: 'banned',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 8333489055791111135),
        name: 'createMeta',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 8959101224931586100),
        name: 'createdAt',
        type: 12,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 5478875498365185455),
        name: 'dbId',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 4548536748823477922),
        name: 'deletedAt',
        type: 12,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(14, 1837199048463628871),
        name: 'deletedMeta',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(15, 862889559935729086),
        name: 'displayUsername',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(16, 5575463070680519760),
        name: 'email',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(17, 8634275897641774556),
        name: 'emailVerified',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(18, 8086443390765025953),
        name: 'fbmToken',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(19, 4176095730565612979),
        name: 'fieldAgentId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(20, 4481048699749269518),
        name: 'firstName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(21, 6378723677466623452),
        name: 'fullName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(22, 3789354904266059361),
        name: 'image',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(23, 6525790560954337315),
        name: 'lastName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(24, 4781451260810402396),
        name: 'memberId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(25, 6435913448835414961),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(26, 5493389155557680540),
        name: 'organizationId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(27, 3630310702585756268),
        name: 'phoneNumber',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(28, 2225003554240332811),
        name: 'phoneNumberVerified',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(29, 6573543762474520452),
        name: 'profileImageBlurHash',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(30, 3040990028924111995),
        name: 'profileImageSize',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(31, 4718166823297635729),
        name: 'role',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(32, 794961304614916563),
        name: 'shippingClientId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(33, 8924701725143870883),
        name: 'status',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(34, 5051750033618018005),
        name: 'subRole',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(35, 2168287439530700739),
        name: 'teamId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(36, 1310034013550954563),
        name: 'teamMemberId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(37, 3583310011815301772),
        name: 'teamType',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(38, 6805616882745190617),
        name: 'twoFactorEnabled',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(39, 875611790132478376),
        name: 'updateMeta',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(40, 6711255155685030688),
        name: 'updatedAt',
        type: 12,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(41, 3255132885521190971),
        name: 'userId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(42, 6976884900702680012),
        name: 'username',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(43, 3764772260803327932),
        name: 'currentLocation',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(44, 8173091906690746093),
        name: 'creationTime',
        type: 12,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(19, 2851251314550912979),
    name: 'CashCountFieldSignUpBox',
    lastPropertyId: const obx_int.IdUid(26, 6266113098038628457),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 958095520644049601),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 2995268697826826738),
        name: 'dbId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 1432262932073035031),
        name: 'completedAt',
        type: 12,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 9209508261654703234),
        name: 'completedMeta',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 8042879651313556216),
        name: 'createMeta',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 5200304212497397045),
        name: 'createdAt',
        type: 12,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 5456317331045439930),
        name: 'creatorId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 8875271250312223389),
        name: 'deletedAt',
        type: 12,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 8361773210385047668),
        name: 'deletedMeta',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 3257707974152910464),
        name: 'deviceId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 7215090163771125270),
        name: 'deviceInfo',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 7576590344388059299),
        name: 'expiredAt',
        type: 12,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(14, 1647466347239814860),
        name: 'fieldAgentId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(15, 4112429504083072832),
        name: 'mongoId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(16, 5099032966665944365),
        name: 'phoneNumber',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(17, 2331721514470387294),
        name: 'referralCode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(18, 6180518091701855126),
        name: 'rejectionAt',
        type: 12,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(19, 2744992489110683474),
        name: 'rejectionMeta',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(20, 3046830927486095649),
        name: 'rejectionReason',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(21, 7463310167697249955),
        name: 'statUpdatedAt',
        type: 12,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(22, 2155315550432537951),
        name: 'status',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(23, 8705705820279152950),
        name: 'teamId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(24, 1890090956892725462),
        name: 'updateMeta',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(25, 7896660738470951998),
        name: 'updatedAt',
        type: 12,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(26, 6266113098038628457),
        name: 'creationTime',
        type: 12,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(20, 3921185338622067297),
    name: 'FieldAgentBox',
    lastPropertyId: const obx_int.IdUid(36, 4879528454934818188),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 354331724147275961),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 7042051523360726443),
        name: 'creationTime',
        type: 12,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 999309440640843830),
        name: 'dbId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 3588639448367479069),
        name: 'countryCityId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 6545886907682985099),
        name: 'countryCityName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 2864180409679678849),
        name: 'countryCode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 2822411405995359142),
        name: 'countryISO',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 3595538319333734874),
        name: 'countryName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 9062068154635048238),
        name: 'countryStateId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 5462978854091934289),
        name: 'countryStateName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 6067315914209014565),
        name: 'createMeta',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 5607314351404140467),
        name: 'createdAt',
        type: 12,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 7810528510814900629),
        name: 'creatorId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(14, 9220754587119129049),
        name: 'dateBirth',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(15, 5376577503307772477),
        name: 'deletedAt',
        type: 12,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(16, 1876771048485490266),
        name: 'deletedMeta',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(17, 8748095705959672685),
        name: 'email',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(18, 6703601724408667073),
        name: 'firstName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(19, 1189068834759511048),
        name: 'fullName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(20, 5354299843263386300),
        name: 'gender',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(21, 7457075492738235822),
        name: 'invitationId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(22, 1083913779882987110),
        name: 'lastName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(23, 2485805485169044430),
        name: 'middleName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(24, 5844847046464027227),
        name: 'phoneNumber',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(25, 6183558289932697395),
        name: 'profileImage',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(26, 1910818938512197574),
        name: 'project',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(27, 2463610002920246341),
        name: 'referralCode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(28, 725369121101267341),
        name: 'status',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(29, 6024753102387672152),
        name: 'teamId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(30, 2662524578602543802),
        name: 'totalAyekooAllocationsCount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(31, 2154372531084932450),
        name: 'totalAyekooCollectionsCount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(32, 3431358171754772149),
        name: 'totalCashCountAllocationsCount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(33, 8436972231767609414),
        name: 'totalCashCountFieldSignUpsCount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(34, 141937735181977338),
        name: 'updateMeta',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(35, 8957418676588978576),
        name: 'updatedAt',
        type: 12,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(36, 4879528454934818188),
        name: 'userId',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore({
  String? directory,
  int? maxDBSizeInKB,
  int? maxDataSizeInKB,
  int? fileMode,
  int? maxReaders,
  bool queriesCaseSensitiveDefault = true,
  String? macosApplicationGroup,
}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(
    getObjectBoxModel(),
    directory: directory ?? (await defaultStoreDirectory()).path,
    maxDBSizeInKB: maxDBSizeInKB,
    maxDataSizeInKB: maxDataSizeInKB,
    fileMode: fileMode,
    maxReaders: maxReaders,
    queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
    macosApplicationGroup: macosApplicationGroup,
  );
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
    entities: _entities,
    lastEntityId: const obx_int.IdUid(20, 3921185338622067297),
    lastIndexId: const obx_int.IdUid(5, 8360414782938869669),
    lastRelationId: const obx_int.IdUid(0, 0),
    lastSequenceId: const obx_int.IdUid(0, 0),
    retiredEntityUids: const [
      8426601332449466519,
      6102403218656284864,
      5463358618376401076,
      5518663612209337860,
      4451430439130659714,
      3840633930944070584,
      1455174329239774947,
      5736716015202032020,
      4310531908307924507,
      8549871824217144150,
      7548198433979774703,
      2497308579503506636,
      3141706765561376234,
      3818690167004839259,
      3735040337502674930,
      8119889653396101914,
      3346228968144275508,
    ],
    retiredIndexUids: const [],
    retiredPropertyUids: const [
      6401334737216061040,
      6561348387586786599,
      6739612564903172683,
      7985650051442113285,
      2502812316493201003,
      1863802220567280003,
      7877408803378346566,
      7965190396295429546,
      7259682233098425349,
      2209232653432750165,
      4280209114189247,
      6045521656950643431,
      6406163056622048241,
      804691941870392155,
      1632165470505267801,
      3705087250632280844,
      4738074042747867859,
      1622950304752462206,
      856902636271440105,
      3530823273090047179,
      5143811997006204202,
      6182673752323161428,
      3388303999422670560,
      8009341722354034313,
      8047325933708258279,
      3302918024397776675,
      2265334196526240926,
      3015574479784775573,
      1736678211969239585,
      4474612736502202131,
      1376108475007208261,
      6419766571196387131,
      2720670988840855794,
      3240833480306044759,
      3463695797932849435,
      2707198449252762448,
      1373853486803557827,
      4455774263006425714,
      2601289177057061292,
      1049278090120610541,
      9014946132455279917,
      34203379229542493,
      43378853722142469,
      3307274611437134380,
      5708201583668810493,
      1526995542876119967,
      6739062041408732122,
      5647125745337940197,
      929280875354930941,
      3398612675568784235,
      3160352217905317239,
      5821186349553280702,
      8290442384545986031,
      2235823184985675995,
      2434758139985096295,
      5513028112040674232,
      3835889445765566293,
      2328324036167571958,
      6550045384243306324,
      4364591147874133033,
      3548930695993633866,
      8060812973867316823,
      1481380957023085623,
      6763584437652593212,
      9031634067262465390,
      3269066073646421898,
      8919721525091743476,
      8157041250003841208,
      6833593738438296576,
      8913570027627260272,
      570230108026144383,
      2538563438682197062,
      7086949215392033518,
      1456602426176310875,
      894464367569745871,
      2856668861538689437,
      9112784579859220500,
      7580505649907055996,
      8583245473691819547,
      552250043283013351,
      2811345868491976484,
      4448855785805576131,
      1020332144538747758,
      5844861499441679290,
      4022226702742417646,
      7502014884279800433,
      6192031523794451430,
      3076845502830723366,
      3012373288820409671,
      2763825534569027641,
      5195183295625533034,
      1301030286546726187,
      1839732899518310023,
      4721903452607781048,
      6124411981399177358,
      8809255265527498806,
      7921247185743319147,
      4197320586164195802,
      146061456680273828,
      15593786286860478,
      3330532571725925721,
      8750680462311318731,
      9196652937149427295,
      4996189388934508667,
      6280169288779839163,
      1273271263128285390,
      1024405701859886775,
      411816490280193310,
      7354332333732288386,
      7411833734091028465,
      7082552770615430073,
      4255153016367587918,
      8442297129387991619,
      6107706349700444704,
      4627446827292978900,
      2237276241005251132,
      6473385969127525557,
      3419921649219414909,
      3821911304113055734,
      3572464749980441022,
      685880188905829855,
      1337127123682739451,
      4937117801384569831,
      4376872456616518616,
      6393381372047189970,
      2447476014541919813,
      2286942432107326135,
      8684636849016899208,
      5474372925686183185,
      4222814786579350125,
      372346277697832549,
      5781563676991622271,
      2698923632906003014,
      2535678841575404611,
      1979895106151803056,
      2826214507165019252,
      4117478594649171869,
      8517414992932445532,
      7826829925778822184,
      2597785590703333760,
      9175470274305185835,
      5560361630953209678,
      4552599370214026491,
      7577997431527108547,
      4838990755219547439,
      715918139031811045,
      2908038014787913362,
      2166453895436466959,
      2861990271150710315,
      4573774799549806956,
      3281068855727328198,
      4391388881955345315,
      2104788775036867128,
      7467332875233702219,
      6573953328427288239,
      763496708847670702,
      8388338896967444359,
      1765492762464829888,
      330439992004018684,
      3407292377786645633,
      8554002390312698293,
      1914260791263609951,
      8836592153574239470,
      6185847182926587451,
      8368668721973035881,
      751013883975686641,
      4996885685248435770,
      5923887637579689232,
      7041596038034994187,
      814714353241564994,
      6273871495682932344,
      964787150762916647,
      6205157713493189522,
      3767217459653892762,
      8005491559021682310,
      686945354517710399,
      2560731770860647683,
      4433836583451581697,
      3798540993328220088,
      8519239365659279402,
      2265039870713534124,
      1116578527046049132,
      1054216353044131628,
      5773798193205458702,
      8157358690516429247,
      9210493994844012307,
      5433866329841127144,
      5448773590054151963,
      3369396441086623937,
      2573289392163949507,
      8374888841811492404,
      4754199807276866037,
      1153745945506047260,
      1855918214831326,
      7247354326128444156,
      3263450655057395017,
      3258088459853711129,
      8175338648515011309,
      3152678794850887700,
      8610146052823820351,
      5691134456070265959,
      5540375622012938381,
      8411924792121412440,
      7612589958277055767,
      5216319556480644887,
      6458691149484318301,
      797073155941060408,
      7227442515951137859,
      1238130780959198850,
      6722242472849756820,
      3623073353777514088,
      7491472698825926259,
      2762953646574498628,
      2085906654422302206,
      3603659723887142593,
      3225450151921976962,
      2395686328905336216,
      122698467817298140,
      1429538232836104345,
      5857042661818543125,
      855131269162051547,
      8104642657229610673,
      7667849819814383631,
      8036242988577889104,
      8100750497115570880,
      7959771810425629396,
      9157265873067533205,
      3966269655690776932,
      5568302247471081832,
      6588891468948507630,
      2536512615869147233,
      5959813325673215578,
      8206108931025330321,
      3101070776721042809,
      7212703395865897082,
      5495896162740793054,
      3222297542318488485,
      1162713046338128886,
      3998642058543085010,
      2440446574472513997,
      7747839834093065252,
      6746982743656960000,
      4597645905906726903,
      8047273857679327288,
      8674546100312562747,
      1211601112798134628,
      4431891686402229062,
      3684648228348149354,
      522940324038741771,
      3110817709515988791,
      7589922040433641584,
      3146265356407074504,
      1826244948671937299,
      5339174947561443581,
      1777431293733487594,
      6293453903667774836,
      5371405288089054590,
      645918254487716336,
      4821148403102494418,
      5264387587491669449,
      6760065726321473498,
      552324814145820550,
      7659443312901963307,
      8061012612900981061,
      869660245196698082,
      2206615563917010635,
      4483919203730805475,
      4554111177273842314,
      5851787821437407350,
      2187907809122570083,
      7721268821505238218,
      2162544954143190375,
      4988922951995001210,
      6469931716368302912,
      713437876660284059,
      6438558046191488647,
      2825207181399818409,
      6094157546182452283,
      8534776516514472742,
      320016892517889007,
      6788992956103718226,
      2517247772779206853,
      5782776582006756433,
      6507723006476066300,
      266343263656663054,
      4627792388963025820,
      1437693660548674405,
      6576216995235191970,
      6519672474009036381,
      2474186804949459003,
    ],
    retiredRelationUids: const [],
    modelVersion: 5,
    modelVersionParserMinimum: 5,
    version: 1,
  );

  final bindings = <Type, obx_int.EntityDefinition>{
    AuthUserBox: obx_int.EntityDefinition<AuthUserBox>(
      model: _entities[0],
      toOneRelations: (AuthUserBox object) => [],
      toManyRelations: (AuthUserBox object) => {},
      getId: (AuthUserBox object) => object.id,
      setId: (AuthUserBox object, int id) {
        object.id = id;
      },
      objectToFB: (AuthUserBox object, fb.Builder fbb) {
        final idRefOffset = object.idRef == null
            ? null
            : fbb.writeString(object.idRef!);
        final appCountryIdOffset = object.appCountryId == null
            ? null
            : fbb.writeString(object.appCountryId!);
        final appCountryIsoOffset = object.appCountryIso == null
            ? null
            : fbb.writeString(object.appCountryIso!);
        final appCountryNameOffset = object.appCountryName == null
            ? null
            : fbb.writeString(object.appCountryName!);
        final banReasonOffset = object.banReason == null
            ? null
            : fbb.writeString(object.banReason!);
        final createMetaOffset = object.createMeta == null
            ? null
            : fbb.writeString(object.createMeta!);
        final deletedMetaOffset = object.deletedMeta == null
            ? null
            : fbb.writeString(object.deletedMeta!);
        final displayUsernameOffset = object.displayUsername == null
            ? null
            : fbb.writeString(object.displayUsername!);
        final emailOffset = fbb.writeString(object.email);
        final fbmTokenOffset = object.fbmToken == null
            ? null
            : fbb.writeString(object.fbmToken!);
        final fieldAgentIdOffset = object.fieldAgentId == null
            ? null
            : fbb.writeString(object.fieldAgentId!);
        final firstNameOffset = object.firstName == null
            ? null
            : fbb.writeString(object.firstName!);
        final fullNameOffset = object.fullName == null
            ? null
            : fbb.writeString(object.fullName!);
        final imageOffset = object.image == null
            ? null
            : fbb.writeString(object.image!);
        final lastNameOffset = object.lastName == null
            ? null
            : fbb.writeString(object.lastName!);
        final memberIdOffset = object.memberId == null
            ? null
            : fbb.writeString(object.memberId!);
        final nameOffset = fbb.writeString(object.name);
        final organizationIdOffset = object.organizationId == null
            ? null
            : fbb.writeString(object.organizationId!);
        final phoneNumberOffset = object.phoneNumber == null
            ? null
            : fbb.writeString(object.phoneNumber!);
        final profileImageBlurHashOffset = object.profileImageBlurHash == null
            ? null
            : fbb.writeString(object.profileImageBlurHash!);
        final roleOffset = object.role == null
            ? null
            : fbb.writeString(object.role!);
        final shippingClientIdOffset = object.shippingClientId == null
            ? null
            : fbb.writeString(object.shippingClientId!);
        final statusOffset = object.status == null
            ? null
            : fbb.writeString(object.status!);
        final subRoleOffset = object.subRole == null
            ? null
            : fbb.writeString(object.subRole!);
        final teamIdOffset = object.teamId == null
            ? null
            : fbb.writeString(object.teamId!);
        final teamMemberIdOffset = object.teamMemberId == null
            ? null
            : fbb.writeString(object.teamMemberId!);
        final teamTypeOffset = object.teamType == null
            ? null
            : fbb.writeString(object.teamType!);
        final updateMetaOffset = object.updateMeta == null
            ? null
            : fbb.writeString(object.updateMeta!);
        final userIdOffset = object.userId == null
            ? null
            : fbb.writeString(object.userId!);
        final usernameOffset = object.username == null
            ? null
            : fbb.writeString(object.username!);
        final currentLocationOffset = object.currentLocation == null
            ? null
            : fbb.writeString(object.currentLocation!);
        fbb.startTable(45);
        fbb.addInt64(0, object.id);
        fbb.addOffset(2, idRefOffset);
        fbb.addOffset(3, appCountryIdOffset);
        fbb.addOffset(4, appCountryIsoOffset);
        fbb.addOffset(5, appCountryNameOffset);
        fbb.addInt64(6, object.banExpires);
        fbb.addOffset(7, banReasonOffset);
        fbb.addBool(8, object.banned);
        fbb.addOffset(9, createMetaOffset);
        fbb.addInt64(10, object.createdAt);
        fbb.addFloat64(11, object.dbId);
        fbb.addInt64(12, object.deletedAt);
        fbb.addOffset(13, deletedMetaOffset);
        fbb.addOffset(14, displayUsernameOffset);
        fbb.addOffset(15, emailOffset);
        fbb.addBool(16, object.emailVerified);
        fbb.addOffset(17, fbmTokenOffset);
        fbb.addOffset(18, fieldAgentIdOffset);
        fbb.addOffset(19, firstNameOffset);
        fbb.addOffset(20, fullNameOffset);
        fbb.addOffset(21, imageOffset);
        fbb.addOffset(22, lastNameOffset);
        fbb.addOffset(23, memberIdOffset);
        fbb.addOffset(24, nameOffset);
        fbb.addOffset(25, organizationIdOffset);
        fbb.addOffset(26, phoneNumberOffset);
        fbb.addBool(27, object.phoneNumberVerified);
        fbb.addOffset(28, profileImageBlurHashOffset);
        fbb.addFloat64(29, object.profileImageSize);
        fbb.addOffset(30, roleOffset);
        fbb.addOffset(31, shippingClientIdOffset);
        fbb.addOffset(32, statusOffset);
        fbb.addOffset(33, subRoleOffset);
        fbb.addOffset(34, teamIdOffset);
        fbb.addOffset(35, teamMemberIdOffset);
        fbb.addOffset(36, teamTypeOffset);
        fbb.addBool(37, object.twoFactorEnabled);
        fbb.addOffset(38, updateMetaOffset);
        fbb.addInt64(39, object.updatedAt);
        fbb.addOffset(40, userIdOffset);
        fbb.addOffset(41, usernameOffset);
        fbb.addOffset(42, currentLocationOffset);
        fbb.addInt64(43, object.creationTime);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final idParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final creationTimeParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          90,
          0,
        );
        final idRefParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final appCountryIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final appCountryIsoParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 12);
        final appCountryNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 14);
        final banExpiresParam = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          16,
        );
        final banReasonParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 18);
        final bannedParam = const fb.BoolReader().vTableGetNullable(
          buffer,
          rootOffset,
          20,
        );
        final createMetaParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 22);
        final createdAtParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          24,
          0,
        );
        final currentLocationParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 88);
        final dbIdParam = const fb.Float64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          26,
        );
        final deletedAtParam = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          28,
        );
        final deletedMetaParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 30);
        final displayUsernameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 32);
        final emailParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 34, '');
        final emailVerifiedParam = const fb.BoolReader().vTableGet(
          buffer,
          rootOffset,
          36,
          false,
        );
        final fbmTokenParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 38);
        final fieldAgentIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 40);
        final firstNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 42);
        final fullNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 44);
        final imageParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 46);
        final lastNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 48);
        final memberIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 50);
        final nameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 52, '');
        final organizationIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 54);
        final phoneNumberParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 56);
        final phoneNumberVerifiedParam = const fb.BoolReader()
            .vTableGetNullable(buffer, rootOffset, 58);
        final profileImageBlurHashParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 60);
        final profileImageSizeParam = const fb.Float64Reader()
            .vTableGetNullable(buffer, rootOffset, 62);
        final roleParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 64);
        final shippingClientIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 66);
        final statusParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 68);
        final subRoleParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 70);
        final teamIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 72);
        final teamMemberIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 74);
        final teamTypeParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 76);
        final twoFactorEnabledParam = const fb.BoolReader().vTableGetNullable(
          buffer,
          rootOffset,
          78,
        );
        final updateMetaParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 80);
        final updatedAtParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          82,
          0,
        );
        final userIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 84);
        final usernameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 86);
        final object = AuthUserBox(
          id: idParam,
          creationTime: creationTimeParam,
          idRef: idRefParam,
          appCountryId: appCountryIdParam,
          appCountryIso: appCountryIsoParam,
          appCountryName: appCountryNameParam,
          banExpires: banExpiresParam,
          banReason: banReasonParam,
          banned: bannedParam,
          createMeta: createMetaParam,
          createdAt: createdAtParam,
          currentLocation: currentLocationParam,
          dbId: dbIdParam,
          deletedAt: deletedAtParam,
          deletedMeta: deletedMetaParam,
          displayUsername: displayUsernameParam,
          email: emailParam,
          emailVerified: emailVerifiedParam,
          fbmToken: fbmTokenParam,
          fieldAgentId: fieldAgentIdParam,
          firstName: firstNameParam,
          fullName: fullNameParam,
          image: imageParam,
          lastName: lastNameParam,
          memberId: memberIdParam,
          name: nameParam,
          organizationId: organizationIdParam,
          phoneNumber: phoneNumberParam,
          phoneNumberVerified: phoneNumberVerifiedParam,
          profileImageBlurHash: profileImageBlurHashParam,
          profileImageSize: profileImageSizeParam,
          role: roleParam,
          shippingClientId: shippingClientIdParam,
          status: statusParam,
          subRole: subRoleParam,
          teamId: teamIdParam,
          teamMemberId: teamMemberIdParam,
          teamType: teamTypeParam,
          twoFactorEnabled: twoFactorEnabledParam,
          updateMeta: updateMetaParam,
          updatedAt: updatedAtParam,
          userId: userIdParam,
          username: usernameParam,
        );

        return object;
      },
    ),
    CashCountFieldSignUpBox: obx_int.EntityDefinition<CashCountFieldSignUpBox>(
      model: _entities[1],
      toOneRelations: (CashCountFieldSignUpBox object) => [],
      toManyRelations: (CashCountFieldSignUpBox object) => {},
      getId: (CashCountFieldSignUpBox object) => object.id,
      setId: (CashCountFieldSignUpBox object, int id) {
        object.id = id;
      },
      objectToFB: (CashCountFieldSignUpBox object, fb.Builder fbb) {
        final dbIdOffset = fbb.writeString(object.dbId);
        final completedMetaOffset = object.completedMeta == null
            ? null
            : fbb.writeString(object.completedMeta!);
        final createMetaOffset = object.createMeta == null
            ? null
            : fbb.writeString(object.createMeta!);
        final creatorIdOffset = fbb.writeString(object.creatorId);
        final deletedMetaOffset = object.deletedMeta == null
            ? null
            : fbb.writeString(object.deletedMeta!);
        final deviceIdOffset = fbb.writeString(object.deviceId);
        final deviceInfoOffset = fbb.writeString(object.deviceInfo);
        final fieldAgentIdOffset = fbb.writeString(object.fieldAgentId);
        final mongoIdOffset = fbb.writeString(object.mongoId);
        final phoneNumberOffset = fbb.writeString(object.phoneNumber);
        final referralCodeOffset = fbb.writeString(object.referralCode);
        final rejectionMetaOffset = object.rejectionMeta == null
            ? null
            : fbb.writeString(object.rejectionMeta!);
        final rejectionReasonOffset = object.rejectionReason == null
            ? null
            : fbb.writeString(object.rejectionReason!);
        final statusOffset = fbb.writeString(object.status);
        final teamIdOffset = object.teamId == null
            ? null
            : fbb.writeString(object.teamId!);
        final updateMetaOffset = object.updateMeta == null
            ? null
            : fbb.writeString(object.updateMeta!);
        fbb.startTable(27);
        fbb.addInt64(0, object.id);
        fbb.addOffset(2, dbIdOffset);
        fbb.addInt64(3, object.completedAt);
        fbb.addOffset(4, completedMetaOffset);
        fbb.addOffset(5, createMetaOffset);
        fbb.addInt64(6, object.createdAt);
        fbb.addOffset(7, creatorIdOffset);
        fbb.addInt64(8, object.deletedAt);
        fbb.addOffset(9, deletedMetaOffset);
        fbb.addOffset(10, deviceIdOffset);
        fbb.addOffset(11, deviceInfoOffset);
        fbb.addInt64(12, object.expiredAt);
        fbb.addOffset(13, fieldAgentIdOffset);
        fbb.addOffset(14, mongoIdOffset);
        fbb.addOffset(15, phoneNumberOffset);
        fbb.addOffset(16, referralCodeOffset);
        fbb.addInt64(17, object.rejectionAt);
        fbb.addOffset(18, rejectionMetaOffset);
        fbb.addOffset(19, rejectionReasonOffset);
        fbb.addInt64(20, object.statUpdatedAt);
        fbb.addOffset(21, statusOffset);
        fbb.addOffset(22, teamIdOffset);
        fbb.addOffset(23, updateMetaOffset);
        fbb.addInt64(24, object.updatedAt);
        fbb.addInt64(25, object.creationTime);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final idParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final creationTimeParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          54,
          0,
        );
        final dbIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 8, '');
        final completedAtParam = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          10,
        );
        final completedMetaParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 12);
        final createMetaParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 14);
        final createdAtParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          16,
          0,
        );
        final creatorIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 18, '');
        final deletedAtParam = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          20,
        );
        final deletedMetaParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 22);
        final deviceIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 24, '');
        final deviceInfoParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 26, '');
        final expiredAtParam = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          28,
        );
        final fieldAgentIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 30, '');
        final mongoIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 32, '');
        final phoneNumberParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 34, '');
        final referralCodeParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 36, '');
        final rejectionAtParam = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          38,
        );
        final rejectionMetaParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 40);
        final rejectionReasonParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 42);
        final statUpdatedAtParam = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          44,
        );
        final statusParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 46, '');
        final teamIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 48);
        final updateMetaParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 50);
        final updatedAtParam = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          52,
        );
        final object = CashCountFieldSignUpBox(
          id: idParam,
          creationTime: creationTimeParam,
          dbId: dbIdParam,
          completedAt: completedAtParam,
          completedMeta: completedMetaParam,
          createMeta: createMetaParam,
          createdAt: createdAtParam,
          creatorId: creatorIdParam,
          deletedAt: deletedAtParam,
          deletedMeta: deletedMetaParam,
          deviceId: deviceIdParam,
          deviceInfo: deviceInfoParam,
          expiredAt: expiredAtParam,
          fieldAgentId: fieldAgentIdParam,
          mongoId: mongoIdParam,
          phoneNumber: phoneNumberParam,
          referralCode: referralCodeParam,
          rejectionAt: rejectionAtParam,
          rejectionMeta: rejectionMetaParam,
          rejectionReason: rejectionReasonParam,
          statUpdatedAt: statUpdatedAtParam,
          status: statusParam,
          teamId: teamIdParam,
          updateMeta: updateMetaParam,
          updatedAt: updatedAtParam,
        );

        return object;
      },
    ),
    FieldAgentBox: obx_int.EntityDefinition<FieldAgentBox>(
      model: _entities[2],
      toOneRelations: (FieldAgentBox object) => [],
      toManyRelations: (FieldAgentBox object) => {},
      getId: (FieldAgentBox object) => object.id,
      setId: (FieldAgentBox object, int id) {
        object.id = id;
      },
      objectToFB: (FieldAgentBox object, fb.Builder fbb) {
        final dbIdOffset = fbb.writeString(object.dbId);
        final countryCityIdOffset = object.countryCityId == null
            ? null
            : fbb.writeString(object.countryCityId!);
        final countryCityNameOffset = object.countryCityName == null
            ? null
            : fbb.writeString(object.countryCityName!);
        final countryCodeOffset = object.countryCode == null
            ? null
            : fbb.writeString(object.countryCode!);
        final countryISOOffset = fbb.writeString(object.countryISO);
        final countryNameOffset = fbb.writeString(object.countryName);
        final countryStateIdOffset = object.countryStateId == null
            ? null
            : fbb.writeString(object.countryStateId!);
        final countryStateNameOffset = object.countryStateName == null
            ? null
            : fbb.writeString(object.countryStateName!);
        final createMetaOffset = object.createMeta == null
            ? null
            : fbb.writeString(object.createMeta!);
        final creatorIdOffset = fbb.writeString(object.creatorId);
        final deletedMetaOffset = object.deletedMeta == null
            ? null
            : fbb.writeString(object.deletedMeta!);
        final emailOffset = fbb.writeString(object.email);
        final firstNameOffset = fbb.writeString(object.firstName);
        final fullNameOffset = object.fullName == null
            ? null
            : fbb.writeString(object.fullName!);
        final genderOffset = fbb.writeString(object.gender);
        final invitationIdOffset = object.invitationId == null
            ? null
            : fbb.writeString(object.invitationId!);
        final lastNameOffset = fbb.writeString(object.lastName);
        final middleNameOffset = object.middleName == null
            ? null
            : fbb.writeString(object.middleName!);
        final phoneNumberOffset = fbb.writeString(object.phoneNumber);
        final profileImageOffset = object.profileImage == null
            ? null
            : fbb.writeString(object.profileImage!);
        final projectOffset = fbb.writeString(object.project);
        final referralCodeOffset = fbb.writeString(object.referralCode);
        final statusOffset = fbb.writeString(object.status);
        final teamIdOffset = object.teamId == null
            ? null
            : fbb.writeString(object.teamId!);
        final updateMetaOffset = object.updateMeta == null
            ? null
            : fbb.writeString(object.updateMeta!);
        final userIdOffset = object.userId == null
            ? null
            : fbb.writeString(object.userId!);
        fbb.startTable(37);
        fbb.addInt64(0, object.id);
        fbb.addInt64(1, object.creationTime);
        fbb.addOffset(2, dbIdOffset);
        fbb.addOffset(3, countryCityIdOffset);
        fbb.addOffset(4, countryCityNameOffset);
        fbb.addOffset(5, countryCodeOffset);
        fbb.addOffset(6, countryISOOffset);
        fbb.addOffset(7, countryNameOffset);
        fbb.addOffset(8, countryStateIdOffset);
        fbb.addOffset(9, countryStateNameOffset);
        fbb.addOffset(10, createMetaOffset);
        fbb.addInt64(11, object.createdAt);
        fbb.addOffset(12, creatorIdOffset);
        fbb.addFloat64(13, object.dateBirth);
        fbb.addInt64(14, object.deletedAt);
        fbb.addOffset(15, deletedMetaOffset);
        fbb.addOffset(16, emailOffset);
        fbb.addOffset(17, firstNameOffset);
        fbb.addOffset(18, fullNameOffset);
        fbb.addOffset(19, genderOffset);
        fbb.addOffset(20, invitationIdOffset);
        fbb.addOffset(21, lastNameOffset);
        fbb.addOffset(22, middleNameOffset);
        fbb.addOffset(23, phoneNumberOffset);
        fbb.addOffset(24, profileImageOffset);
        fbb.addOffset(25, projectOffset);
        fbb.addOffset(26, referralCodeOffset);
        fbb.addOffset(27, statusOffset);
        fbb.addOffset(28, teamIdOffset);
        fbb.addFloat64(29, object.totalAyekooAllocationsCount);
        fbb.addFloat64(30, object.totalAyekooCollectionsCount);
        fbb.addFloat64(31, object.totalCashCountAllocationsCount);
        fbb.addFloat64(32, object.totalCashCountFieldSignUpsCount);
        fbb.addOffset(33, updateMetaOffset);
        fbb.addInt64(34, object.updatedAt);
        fbb.addOffset(35, userIdOffset);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final idParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final creationTimeParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          6,
          0,
        );
        final dbIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 8, '');
        final countryCityIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final countryCityNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 12);
        final countryCodeParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 14);
        final countryISOParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 16, '');
        final countryNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 18, '');
        final countryStateIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 20);
        final countryStateNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 22);
        final createMetaParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 24);
        final createdAtParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          26,
          0,
        );
        final creatorIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 28, '');
        final dateBirthParam = const fb.Float64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          30,
        );
        final deletedAtParam = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          32,
        );
        final deletedMetaParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 34);
        final emailParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 36, '');
        final firstNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 38, '');
        final fullNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 40);
        final genderParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 42, '');
        final invitationIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 44);
        final lastNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 46, '');
        final middleNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 48);
        final phoneNumberParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 50, '');
        final profileImageParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 52);
        final projectParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 54, '');
        final referralCodeParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 56, '');
        final statusParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 58, '');
        final teamIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 60);
        final totalAyekooAllocationsCountParam = const fb.Float64Reader()
            .vTableGetNullable(buffer, rootOffset, 62);
        final totalAyekooCollectionsCountParam = const fb.Float64Reader()
            .vTableGetNullable(buffer, rootOffset, 64);
        final totalCashCountAllocationsCountParam = const fb.Float64Reader()
            .vTableGetNullable(buffer, rootOffset, 66);
        final totalCashCountFieldSignUpsCountParam = const fb.Float64Reader()
            .vTableGetNullable(buffer, rootOffset, 68);
        final updateMetaParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 70);
        final updatedAtParam = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          72,
        );
        final userIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 74);
        final object = FieldAgentBox(
          id: idParam,
          creationTime: creationTimeParam,
          dbId: dbIdParam,
          countryCityId: countryCityIdParam,
          countryCityName: countryCityNameParam,
          countryCode: countryCodeParam,
          countryISO: countryISOParam,
          countryName: countryNameParam,
          countryStateId: countryStateIdParam,
          countryStateName: countryStateNameParam,
          createMeta: createMetaParam,
          createdAt: createdAtParam,
          creatorId: creatorIdParam,
          dateBirth: dateBirthParam,
          deletedAt: deletedAtParam,
          deletedMeta: deletedMetaParam,
          email: emailParam,
          firstName: firstNameParam,
          fullName: fullNameParam,
          gender: genderParam,
          invitationId: invitationIdParam,
          lastName: lastNameParam,
          middleName: middleNameParam,
          phoneNumber: phoneNumberParam,
          profileImage: profileImageParam,
          project: projectParam,
          referralCode: referralCodeParam,
          status: statusParam,
          teamId: teamIdParam,
          totalAyekooAllocationsCount: totalAyekooAllocationsCountParam,
          totalAyekooCollectionsCount: totalAyekooCollectionsCountParam,
          totalCashCountAllocationsCount: totalCashCountAllocationsCountParam,
          totalCashCountFieldSignUpsCount: totalCashCountFieldSignUpsCountParam,
          updateMeta: updateMetaParam,
          updatedAt: updatedAtParam,
          userId: userIdParam,
        );

        return object;
      },
    ),
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [AuthUserBox] entity fields to define ObjectBox queries.
class AuthUserBox_ {
  /// See [AuthUserBox.id].
  static final id = obx.QueryIntegerProperty<AuthUserBox>(
    _entities[0].properties[0],
  );

  /// See [AuthUserBox.idRef].
  static final idRef = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[1],
  );

  /// See [AuthUserBox.appCountryId].
  static final appCountryId = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[2],
  );

  /// See [AuthUserBox.appCountryIso].
  static final appCountryIso = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[3],
  );

  /// See [AuthUserBox.appCountryName].
  static final appCountryName = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[4],
  );

  /// See [AuthUserBox.banExpires].
  static final banExpires = obx.QueryDateNanoProperty<AuthUserBox>(
    _entities[0].properties[5],
  );

  /// See [AuthUserBox.banReason].
  static final banReason = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[6],
  );

  /// See [AuthUserBox.banned].
  static final banned = obx.QueryBooleanProperty<AuthUserBox>(
    _entities[0].properties[7],
  );

  /// See [AuthUserBox.createMeta].
  static final createMeta = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[8],
  );

  /// See [AuthUserBox.createdAt].
  static final createdAt = obx.QueryDateNanoProperty<AuthUserBox>(
    _entities[0].properties[9],
  );

  /// See [AuthUserBox.dbId].
  static final dbId = obx.QueryDoubleProperty<AuthUserBox>(
    _entities[0].properties[10],
  );

  /// See [AuthUserBox.deletedAt].
  static final deletedAt = obx.QueryDateNanoProperty<AuthUserBox>(
    _entities[0].properties[11],
  );

  /// See [AuthUserBox.deletedMeta].
  static final deletedMeta = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[12],
  );

  /// See [AuthUserBox.displayUsername].
  static final displayUsername = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[13],
  );

  /// See [AuthUserBox.email].
  static final email = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[14],
  );

  /// See [AuthUserBox.emailVerified].
  static final emailVerified = obx.QueryBooleanProperty<AuthUserBox>(
    _entities[0].properties[15],
  );

  /// See [AuthUserBox.fbmToken].
  static final fbmToken = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[16],
  );

  /// See [AuthUserBox.fieldAgentId].
  static final fieldAgentId = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[17],
  );

  /// See [AuthUserBox.firstName].
  static final firstName = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[18],
  );

  /// See [AuthUserBox.fullName].
  static final fullName = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[19],
  );

  /// See [AuthUserBox.image].
  static final image = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[20],
  );

  /// See [AuthUserBox.lastName].
  static final lastName = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[21],
  );

  /// See [AuthUserBox.memberId].
  static final memberId = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[22],
  );

  /// See [AuthUserBox.name].
  static final name = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[23],
  );

  /// See [AuthUserBox.organizationId].
  static final organizationId = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[24],
  );

  /// See [AuthUserBox.phoneNumber].
  static final phoneNumber = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[25],
  );

  /// See [AuthUserBox.phoneNumberVerified].
  static final phoneNumberVerified = obx.QueryBooleanProperty<AuthUserBox>(
    _entities[0].properties[26],
  );

  /// See [AuthUserBox.profileImageBlurHash].
  static final profileImageBlurHash = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[27],
  );

  /// See [AuthUserBox.profileImageSize].
  static final profileImageSize = obx.QueryDoubleProperty<AuthUserBox>(
    _entities[0].properties[28],
  );

  /// See [AuthUserBox.role].
  static final role = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[29],
  );

  /// See [AuthUserBox.shippingClientId].
  static final shippingClientId = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[30],
  );

  /// See [AuthUserBox.status].
  static final status = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[31],
  );

  /// See [AuthUserBox.subRole].
  static final subRole = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[32],
  );

  /// See [AuthUserBox.teamId].
  static final teamId = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[33],
  );

  /// See [AuthUserBox.teamMemberId].
  static final teamMemberId = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[34],
  );

  /// See [AuthUserBox.teamType].
  static final teamType = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[35],
  );

  /// See [AuthUserBox.twoFactorEnabled].
  static final twoFactorEnabled = obx.QueryBooleanProperty<AuthUserBox>(
    _entities[0].properties[36],
  );

  /// See [AuthUserBox.updateMeta].
  static final updateMeta = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[37],
  );

  /// See [AuthUserBox.updatedAt].
  static final updatedAt = obx.QueryDateNanoProperty<AuthUserBox>(
    _entities[0].properties[38],
  );

  /// See [AuthUserBox.userId].
  static final userId = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[39],
  );

  /// See [AuthUserBox.username].
  static final username = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[40],
  );

  /// See [AuthUserBox.currentLocation].
  static final currentLocation = obx.QueryStringProperty<AuthUserBox>(
    _entities[0].properties[41],
  );

  /// See [AuthUserBox.creationTime].
  static final creationTime = obx.QueryDateNanoProperty<AuthUserBox>(
    _entities[0].properties[42],
  );
}

/// [CashCountFieldSignUpBox] entity fields to define ObjectBox queries.
class CashCountFieldSignUpBox_ {
  /// See [CashCountFieldSignUpBox.id].
  static final id = obx.QueryIntegerProperty<CashCountFieldSignUpBox>(
    _entities[1].properties[0],
  );

  /// See [CashCountFieldSignUpBox.dbId].
  static final dbId = obx.QueryStringProperty<CashCountFieldSignUpBox>(
    _entities[1].properties[1],
  );

  /// See [CashCountFieldSignUpBox.completedAt].
  static final completedAt = obx.QueryDateNanoProperty<CashCountFieldSignUpBox>(
    _entities[1].properties[2],
  );

  /// See [CashCountFieldSignUpBox.completedMeta].
  static final completedMeta = obx.QueryStringProperty<CashCountFieldSignUpBox>(
    _entities[1].properties[3],
  );

  /// See [CashCountFieldSignUpBox.createMeta].
  static final createMeta = obx.QueryStringProperty<CashCountFieldSignUpBox>(
    _entities[1].properties[4],
  );

  /// See [CashCountFieldSignUpBox.createdAt].
  static final createdAt = obx.QueryDateNanoProperty<CashCountFieldSignUpBox>(
    _entities[1].properties[5],
  );

  /// See [CashCountFieldSignUpBox.creatorId].
  static final creatorId = obx.QueryStringProperty<CashCountFieldSignUpBox>(
    _entities[1].properties[6],
  );

  /// See [CashCountFieldSignUpBox.deletedAt].
  static final deletedAt = obx.QueryDateNanoProperty<CashCountFieldSignUpBox>(
    _entities[1].properties[7],
  );

  /// See [CashCountFieldSignUpBox.deletedMeta].
  static final deletedMeta = obx.QueryStringProperty<CashCountFieldSignUpBox>(
    _entities[1].properties[8],
  );

  /// See [CashCountFieldSignUpBox.deviceId].
  static final deviceId = obx.QueryStringProperty<CashCountFieldSignUpBox>(
    _entities[1].properties[9],
  );

  /// See [CashCountFieldSignUpBox.deviceInfo].
  static final deviceInfo = obx.QueryStringProperty<CashCountFieldSignUpBox>(
    _entities[1].properties[10],
  );

  /// See [CashCountFieldSignUpBox.expiredAt].
  static final expiredAt = obx.QueryDateNanoProperty<CashCountFieldSignUpBox>(
    _entities[1].properties[11],
  );

  /// See [CashCountFieldSignUpBox.fieldAgentId].
  static final fieldAgentId = obx.QueryStringProperty<CashCountFieldSignUpBox>(
    _entities[1].properties[12],
  );

  /// See [CashCountFieldSignUpBox.mongoId].
  static final mongoId = obx.QueryStringProperty<CashCountFieldSignUpBox>(
    _entities[1].properties[13],
  );

  /// See [CashCountFieldSignUpBox.phoneNumber].
  static final phoneNumber = obx.QueryStringProperty<CashCountFieldSignUpBox>(
    _entities[1].properties[14],
  );

  /// See [CashCountFieldSignUpBox.referralCode].
  static final referralCode = obx.QueryStringProperty<CashCountFieldSignUpBox>(
    _entities[1].properties[15],
  );

  /// See [CashCountFieldSignUpBox.rejectionAt].
  static final rejectionAt = obx.QueryDateNanoProperty<CashCountFieldSignUpBox>(
    _entities[1].properties[16],
  );

  /// See [CashCountFieldSignUpBox.rejectionMeta].
  static final rejectionMeta = obx.QueryStringProperty<CashCountFieldSignUpBox>(
    _entities[1].properties[17],
  );

  /// See [CashCountFieldSignUpBox.rejectionReason].
  static final rejectionReason =
      obx.QueryStringProperty<CashCountFieldSignUpBox>(
        _entities[1].properties[18],
      );

  /// See [CashCountFieldSignUpBox.statUpdatedAt].
  static final statUpdatedAt =
      obx.QueryDateNanoProperty<CashCountFieldSignUpBox>(
        _entities[1].properties[19],
      );

  /// See [CashCountFieldSignUpBox.status].
  static final status = obx.QueryStringProperty<CashCountFieldSignUpBox>(
    _entities[1].properties[20],
  );

  /// See [CashCountFieldSignUpBox.teamId].
  static final teamId = obx.QueryStringProperty<CashCountFieldSignUpBox>(
    _entities[1].properties[21],
  );

  /// See [CashCountFieldSignUpBox.updateMeta].
  static final updateMeta = obx.QueryStringProperty<CashCountFieldSignUpBox>(
    _entities[1].properties[22],
  );

  /// See [CashCountFieldSignUpBox.updatedAt].
  static final updatedAt = obx.QueryDateNanoProperty<CashCountFieldSignUpBox>(
    _entities[1].properties[23],
  );

  /// See [CashCountFieldSignUpBox.creationTime].
  static final creationTime =
      obx.QueryDateNanoProperty<CashCountFieldSignUpBox>(
        _entities[1].properties[24],
      );
}

/// [FieldAgentBox] entity fields to define ObjectBox queries.
class FieldAgentBox_ {
  /// See [FieldAgentBox.id].
  static final id = obx.QueryIntegerProperty<FieldAgentBox>(
    _entities[2].properties[0],
  );

  /// See [FieldAgentBox.creationTime].
  static final creationTime = obx.QueryDateNanoProperty<FieldAgentBox>(
    _entities[2].properties[1],
  );

  /// See [FieldAgentBox.dbId].
  static final dbId = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[2],
  );

  /// See [FieldAgentBox.countryCityId].
  static final countryCityId = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[3],
  );

  /// See [FieldAgentBox.countryCityName].
  static final countryCityName = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[4],
  );

  /// See [FieldAgentBox.countryCode].
  static final countryCode = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[5],
  );

  /// See [FieldAgentBox.countryISO].
  static final countryISO = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[6],
  );

  /// See [FieldAgentBox.countryName].
  static final countryName = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[7],
  );

  /// See [FieldAgentBox.countryStateId].
  static final countryStateId = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[8],
  );

  /// See [FieldAgentBox.countryStateName].
  static final countryStateName = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[9],
  );

  /// See [FieldAgentBox.createMeta].
  static final createMeta = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[10],
  );

  /// See [FieldAgentBox.createdAt].
  static final createdAt = obx.QueryDateNanoProperty<FieldAgentBox>(
    _entities[2].properties[11],
  );

  /// See [FieldAgentBox.creatorId].
  static final creatorId = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[12],
  );

  /// See [FieldAgentBox.dateBirth].
  static final dateBirth = obx.QueryDoubleProperty<FieldAgentBox>(
    _entities[2].properties[13],
  );

  /// See [FieldAgentBox.deletedAt].
  static final deletedAt = obx.QueryDateNanoProperty<FieldAgentBox>(
    _entities[2].properties[14],
  );

  /// See [FieldAgentBox.deletedMeta].
  static final deletedMeta = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[15],
  );

  /// See [FieldAgentBox.email].
  static final email = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[16],
  );

  /// See [FieldAgentBox.firstName].
  static final firstName = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[17],
  );

  /// See [FieldAgentBox.fullName].
  static final fullName = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[18],
  );

  /// See [FieldAgentBox.gender].
  static final gender = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[19],
  );

  /// See [FieldAgentBox.invitationId].
  static final invitationId = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[20],
  );

  /// See [FieldAgentBox.lastName].
  static final lastName = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[21],
  );

  /// See [FieldAgentBox.middleName].
  static final middleName = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[22],
  );

  /// See [FieldAgentBox.phoneNumber].
  static final phoneNumber = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[23],
  );

  /// See [FieldAgentBox.profileImage].
  static final profileImage = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[24],
  );

  /// See [FieldAgentBox.project].
  static final project = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[25],
  );

  /// See [FieldAgentBox.referralCode].
  static final referralCode = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[26],
  );

  /// See [FieldAgentBox.status].
  static final status = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[27],
  );

  /// See [FieldAgentBox.teamId].
  static final teamId = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[28],
  );

  /// See [FieldAgentBox.totalAyekooAllocationsCount].
  static final totalAyekooAllocationsCount =
      obx.QueryDoubleProperty<FieldAgentBox>(_entities[2].properties[29]);

  /// See [FieldAgentBox.totalAyekooCollectionsCount].
  static final totalAyekooCollectionsCount =
      obx.QueryDoubleProperty<FieldAgentBox>(_entities[2].properties[30]);

  /// See [FieldAgentBox.totalCashCountAllocationsCount].
  static final totalCashCountAllocationsCount =
      obx.QueryDoubleProperty<FieldAgentBox>(_entities[2].properties[31]);

  /// See [FieldAgentBox.totalCashCountFieldSignUpsCount].
  static final totalCashCountFieldSignUpsCount =
      obx.QueryDoubleProperty<FieldAgentBox>(_entities[2].properties[32]);

  /// See [FieldAgentBox.updateMeta].
  static final updateMeta = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[33],
  );

  /// See [FieldAgentBox.updatedAt].
  static final updatedAt = obx.QueryDateNanoProperty<FieldAgentBox>(
    _entities[2].properties[34],
  );

  /// See [FieldAgentBox.userId].
  static final userId = obx.QueryStringProperty<FieldAgentBox>(
    _entities[2].properties[35],
  );
}
